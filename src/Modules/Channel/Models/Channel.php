<?php

namespace OmSdk\Modules\Channel\Models;

use AccountSdkDb\Modules\Store\Models\Store;
use AccountSdkDb\Modules\User\Models\User;
use Common\Models\AbstractModel;
use Illuminate\Database\Eloquent\SoftDeletes;
use OmSdk\Modules\Channel\Models\Observers\ChannelObserver;
use OmSdk\Modules\SubChannel\Models\SubChannel;

/**
 * Class Channel
 * @package Inventory\Modules\Channel\Models
 *
 * @property int $id
 * @property string $name
 * @property string $code
 * @property int $is_active
 * @property int $created_by_id
 * @property int $modified_user_id
 * @property string $created_at
 * @property string $update_at
 * @property string $deleted_at
 */
class Channel extends AbstractModel
{
    use SoftDeletes;

    protected $table = 'om_marketing_channels';

    protected $primaryKey = 'id';

    protected $dates = ['deleted_at'];

    protected $fillable = [
        'store_id',
        'name',
        'code',
        'is_active',
        'updated_by',
        'created_by',
    ];

    const IS_ACTIVE = 1;
    const NOT_ACTIVE = 0;

    public function subChannel(){
        return $this->hasMany(SubChannel::class);
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function userCreated()
    {
        return $this->belongsTo(User::class, 'created_by');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function userUpdated()
    {
        return $this->belongsTo(User::class, 'updated_by');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function store()
    {
        return $this->belongsTo(Store::class, 'store_id');
    }

    /**
     * Observer Channel
     * @return void
     */
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::observe(ChannelObserver::class);
    }
}
